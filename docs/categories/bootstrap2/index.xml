<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bootstrap2 on 布洛阁 - Heaven Jiang</title>
    <link>http://www.jiangyuqin.com/categories/bootstrap2/</link>
    <description>Recent content in Bootstrap2 on 布洛阁 - Heaven Jiang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sun, 18 Sep 2016 15:30:10 +0800</lastBuildDate>
    
	<atom:link href="http://www.jiangyuqin.com/categories/bootstrap2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bootstrap2-3.布局</title>
      <link>http://www.jiangyuqin.com/post/bootstrap2/3-%E5%B8%83%E5%B1%80/</link>
      <pubDate>Sun, 18 Sep 2016 15:30:10 +0800</pubDate>
      
      <guid>http://www.jiangyuqin.com/post/bootstrap2/3-%E5%B8%83%E5%B1%80/</guid>
      <description>Bootstrap2-3.布局 1.全局设置 必须使用HTML5文档类型  Bootstrap使用的某些HTML元素和CSS属性需要文档类型为HTML5 doctype。因此这一文档类型必须出现在项目的每个页面的开始部分。
 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; ... &amp;lt;/html&amp;gt;  排版和链接 Bootstrap 为屏幕、排版和链接设置了基本的全局样式。尤其是，我们:  移除了 body的 margin 设置了 body 的背景颜色 background-color: white; 使用 @baseFontFamily、@baseFontSize 和@baseLineHeight 属性作为我们排版的基础 通过 @linkColor 设置全局链接颜色，并且，当链接处于 :hover 状态时才会带有下划线 &amp;gt;这些样式可以在 scaffolding.less 文件中找到。  用Normalize重置样式  从 Bootstrap 2 开始, 老的重置方式被 Normalize.css 取代, 这是 Nicolas Gallagher 和Jonathan Neal 共同维护的一个项目，这一项目还被HTML5 Boilerplate 所采用。虽然我们在reset.less 文件中使用了许多Normalize的代码，但是，我们也移除了一些不适合Bootstrap的元素。
 2.默认栅格系统 栅格系统示例  Bootstrap默认的栅格系统为12列 ，形成一个940px宽的容器，默认没有启用 响应式布局特性 。如果加入响应式布局CSS文件，栅格系统会自动根据可视窗口的宽度从724px到1170px进行动态调整。在可视窗口低于767px宽的情况下，列将不再固定并且会在垂直方向堆叠。
 带有基本栅格的HTML代码  对于简单的两列式布局，创建一个 .</description>
    </item>
    
    <item>
      <title>Bootstrap2-2.基础模版</title>
      <link>http://www.jiangyuqin.com/post/bootstrap2/2-%E5%9F%BA%E7%A1%80%E6%A8%A1%E7%89%88/</link>
      <pubDate>Sun, 18 Sep 2016 11:11:10 +0800</pubDate>
      
      <guid>http://www.jiangyuqin.com/post/bootstrap2/2-%E5%9F%BA%E7%A1%80%E6%A8%A1%E7%89%88/</guid>
      <description> Bootstrap2-2.基础模版 开发阶段 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Bootstrap 101 Template&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;!-- Bootstrap --&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet/less&amp;quot; href=&amp;quot;source/less/bootstrap.less&amp;quot;&amp;gt; &amp;lt;script src=&amp;quot;source/js/less-1.7.0.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;quot;source/js/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;source/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  发布阶段 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Bootstrap 101 Template&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;!-- Bootstrap --&amp;gt; &amp;lt;link href=&amp;quot;css/bootstrap.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; media=&amp;quot;screen&amp;quot;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt; &amp;lt;script src=&amp;quot;http://code.jquery.com/jquery.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  </description>
    </item>
    
    <item>
      <title>Bootstrap2-1.LESS定制</title>
      <link>http://www.jiangyuqin.com/post/bootstrap2/1-less%E5%AE%9A%E5%88%B6/</link>
      <pubDate>Sat, 17 Sep 2016 19:30:10 +0800</pubDate>
      
      <guid>http://www.jiangyuqin.com/post/bootstrap2/1-less%E5%AE%9A%E5%88%B6/</guid>
      <description>Bootstrap2-1.LESS定制 Less 简介  CSS（层叠样式表）是一门历史悠久的标记性语言，同 HTML 一道，被广泛应用于万维网（World Wide Web）中。HTML 主要负责文档结构的定义，CSS 负责文档表现形式或样式的定义。作为一门标记性语言，CSS 的语法相对简单，对使用者的要求较低，但同时也带来一些问题：CSS 需要书写大量看似没有逻辑的代码，不方便维护及扩展，不利于复用，尤其对于非前端开发工程师来讲，往往会因为缺少 CSS 编写经验而很难写出组织良好且易于维护的 CSS 代码，造成这些困难的很大原因源于 CSS 是一门非程序式语言，没有变量、函数、SCOPE（作用域）等概念。LESS 为 Web 开发者带来了福音，它在 CSS 的语法基础之上，引入了变量，Mixin（混入），运算以及函数等功能，大大简化了 CSS 的编写，并且降低了 CSS 的维护成本，就像它的名称所说的那样，LESS 可以让我们用更少的代码做更多的事情。
 LESS 原理及使用方式  本质上，LESS 包含一套自定义的语法及一个解析器，用户根据这些语法定义自己的样式规则，这些规则最终会通过解析器，编译生成对应的 CSS 文件。LESS 并没有裁剪 CSS 原有的特性，更不是用来取代 CSS 的，而是在现有 CSS 语法的基础上，为 CSS 加入程序式语言的特性。LESS 是动态的样式表语言，通过简洁明了的语法定义，使编写 CSS 的工作变得非常简单。本文将通过实例，为大家介绍这一框架。
 代码清单 1. LESS文件  LESS代码
@color: #4D926F; #header{ color: @color; } h2{ color: @color; }   2. CSS文件  编译生成的CSS文件如下</description>
    </item>
    
  </channel>
</rss>